name: Build (Desktop)

# Push/PR triggers are active; adjust matrix below to add more platforms when ready.
on:
  push:
    branches: [ main ]
  pull_request:

jobs:
  build:
    name: ${{ matrix.os }} â€¢ ${{ matrix.target }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          # Initial smoke build: macOS Apple Silicon only.
          # Reintroduce Windows/x86 rows once the flow is proven out.
          - os: macos-latest
            target: aarch64-apple-darwin
            bin: desktop
            archive: zip

    steps:
      - uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - name: Cache cargo
        uses: Swatinem/rust-cache@v2

      - name: Build (release)
        run: cargo build --release -p desktop --features desktop --target ${{ matrix.target }}
        env:
          RUSTFLAGS: -C target-cpu=native

      - name: Package artifact (.app bundle)
        shell: bash
        run: |
          set -euo pipefail

          APP_DIR="target/${{ matrix.target }}/release"
          OUT="looplace-desktop-${{ matrix.target }}"
          APP_NAME="Looplace"
          BUNDLE_ROOT="dist/$OUT/${APP_NAME}.app"
          MACOS_DIR="$BUNDLE_ROOT/Contents/MacOS"
          RESOURCES_DIR="$BUNDLE_ROOT/Contents/Resources"

          mkdir -p "$MACOS_DIR" "$RESOURCES_DIR"
          cp "$APP_DIR/${{ matrix.bin }}" "$MACOS_DIR/$APP_NAME"
          chmod +x "$MACOS_DIR/$APP_NAME"

          cp desktop/macos/Info.plist "$BUNDLE_ROOT/Contents/Info.plist"

          if [ -d desktop/assets ]; then
            cp -R desktop/assets "$MACOS_DIR/assets"
          fi

          VERSION=$(grep -m1 '^version' desktop/Cargo.toml | sed 's/.*"\(.*\)"/\1/')
          /usr/libexec/PlistBuddy -c "Set :CFBundleShortVersionString $VERSION" "$BUNDLE_ROOT/Contents/Info.plist"
          /usr/libexec/PlistBuddy -c "Set :CFBundleVersion $VERSION" "$BUNDLE_ROOT/Contents/Info.plist"

          cd dist
          zip -r "$OUT.zip" "$OUT"

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: looplace-${{ matrix.target }}
          path: dist/*.zip
