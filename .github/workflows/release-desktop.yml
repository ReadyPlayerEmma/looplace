name: Release (Desktop)

# Tag-triggered release; expand the matrix below when adding more targets.
on:
  push:
    tags:
      - "v*.*.*"

jobs:
  build:
    name: ${{ matrix.os }} â€¢ ${{ matrix.target }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          # Start with Apple Silicon only; add Windows/x86 entries once validated.
          - os: macos-latest
            target: aarch64-apple-darwin
            bin: desktop

    steps:
      - uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - name: Cache cargo
        uses: Swatinem/rust-cache@v2

      - name: Build (release)
        run: cargo build --release -p desktop --features desktop --target ${{ matrix.target }}

      - name: Package artifact (.app bundle)
        shell: bash
        run: |
          set -euo pipefail

          APP_DIR="target/${{ matrix.target }}/release"
          OUT="looplace-desktop-${{ github.ref_name }}-${{ matrix.target }}"
          APP_NAME="Looplace"
          BUNDLE_ROOT="dist/$OUT/${APP_NAME}.app"
          MACOS_DIR="$BUNDLE_ROOT/Contents/MacOS"
          RESOURCES_DIR="$BUNDLE_ROOT/Contents/Resources"

          mkdir -p "$MACOS_DIR" "$RESOURCES_DIR"
          cp "$APP_DIR/${{ matrix.bin }}" "$MACOS_DIR/$APP_NAME"
          chmod +x "$MACOS_DIR/$APP_NAME"

          cp desktop/macos/Info.plist "$BUNDLE_ROOT/Contents/Info.plist"

          if [ -d desktop/assets ]; then
            cp -R desktop/assets "$MACOS_DIR/assets"
          fi

          VERSION=$(grep -m1 '^version' desktop/Cargo.toml | sed 's/.*"\(.*\)"/\1/')
          /usr/libexec/PlistBuddy -c "Set :CFBundleShortVersionString $VERSION" "$BUNDLE_ROOT/Contents/Info.plist"
          /usr/libexec/PlistBuddy -c "Set :CFBundleVersion $VERSION" "$BUNDLE_ROOT/Contents/Info.plist"

          xattr -cr "$BUNDLE_ROOT" || true
          codesign --force --deep --sign "-" "$BUNDLE_ROOT" || true

          BUNDLE_PARENT_NAME="$OUT-macos"
          BUNDLE_PARENT="dist/$BUNDLE_PARENT_NAME"
          rm -rf "$BUNDLE_PARENT"
          mkdir -p "$BUNDLE_PARENT"
          mv "$BUNDLE_ROOT" "$BUNDLE_PARENT/"

          cd dist
          ditto -c -k --keepParent "$BUNDLE_PARENT_NAME" "$OUT.zip"
          mv "$BUNDLE_PARENT_NAME/${APP_NAME}.app" "$OUT/${APP_NAME}.app"
          rmdir "$BUNDLE_PARENT_NAME"

      - name: Upload artifacts to release
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v2
        with:
          files: dist/*.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload artifact for reuse
        uses: actions/upload-artifact@v4
        with:
          name: looplace-${{ matrix.target }}
          path: dist/*.zip
